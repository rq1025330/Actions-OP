#========================================================================================================================
# https://github.com/ophub/op
# Description: Use Releases file to packaging
# Cron: min (0 - 59) / hour (0 - 23) / day of month (1 - 31) / month (1 - 12) / day of week (0 - 6)(Sunday - Saturday)
#========================================================================================================================

name: ARMv8_Build_Lite
   
on:
  repository_dispatch:
  workflow_dispatch:
#  release:
#    types: published
  push:
    branches:
      - master
    paths:
      - 'BuildARMv8/*.*/*.tar.gz'
  schedule:
    - cron: 0 0 * * *
  watch:
    types: started    
    
env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default 
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  MRG_ADD_SH: aarch64/ARMv8.sh
  Update_Ver_SH: aarch64/autoVersion.sh
#  SSH_ACTIONS: false
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: false
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai
  FILE_NAME: ARMv8_Lite
  PRODUCT_NAME: ARMv8_Lite

jobs:
  build:
    runs-on: ubuntu-22.04
    # if: github.event.repository.owner.id == github.event.sender.id

    steps:
    #- name: WeChat notification
    #  run: curl https://sc.ftqq.com/${{ secrets.ServerChan }}.send?text=${{ env.FILE_NAME }}开始编译
      
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL https://is.gd/depends_ubuntu_2204)
        sudo -E apt-get -qq install rename
        sudo -E apt-get -qq install pigz
        sudo -E apt-get -qq install time
        sudo -E apt-get -qq install sshpass
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
        cd openwrt
        useVersionInfo=$(git show -s --date=short --format="Author: %an<br/>date: %cd<br/>commit: %s<br/>commit hash: %H")
        echo "useVersionInfo=$useVersionInfo" >> $GITHUB_ENV
        echo "DATE=$(date "+%Y-%m-%d %H:%M:%S")" >> $GITHUB_ENV
        echo "DATE1=$(date "+%Y-%m-%d")" >> $GITHUB_ENV
#        echo "::set-env name=useVersionInfo::$useVersionInfo"
#        echo "::set-env name=DATE::$(date "+%Y-%m-%d %H:%M:%S")"

    - name: Package Armvirt as OpenWrt
      uses: unifreq/openwrt_packit@master
    #  uses: ophub/flippy-openwrt-actions@main
      env:
        OPENWRT_ARMVIRT: https://github.com/${{github.repository}}/releases/download/Files4Build_Lite/openwrt-armvirt-64-default-rootfs.tar.gz
        #PACKAGE_SOC: vplus_dockerimgs_beikeyun_l1pro_s905_s905d_s905x2_s905x3_s912_s922x_s922x-n2
        PACKAGE_SOC: s905d_s905x3_QEMU
        KERNEL_VERSION_NAME: 5.15.78_6.0.8
        KERNEL_REPO_URL: https://github.com/${{github.repository}}/tree/master/BuildARMv8
        WHOAMI: RQ
        #OPENWRT_VER: R21.12.1
        KERNEL_AUTO_LATEST: true
        GZIP_IMGS: .gz

    - name: Upload artifact to Actions
      uses: kittaakos/upload-artifact-as-is@master
      if: env.PACKAGED_STATUS == 'success' && env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      with:
        path: ${{ env.PACKAGED_OUTPUTPATH }}/

    - name: Create release
      id: release
      uses: ncipollo/release-action@v1
      if: env.PACKAGED_STATUS == 'success' && env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        name: R${{ env.DATE }} for ${{ env.FILE_NAME }}
        allowUpdates: true
        tag: ${{ env.FILE_NAME }}
        commit: master
        token: ${{ secrets.RELEASES_TOKEN }}
        body: |
          默认IP：192.168.123.1 默认密码：password
          Lite版：精简版
          当前使用版本:【编译前的最后一次[➦主源码](https://github.com/coolsnowwolf/lede)更新记录】
          参见 Files4Build_Lite 内记录
          **Full版**---->[下载](https://github.com/rq1025330/Actions-OP/releases/tag/ARMv8_Full)
        artifacts: ${{ env.PACKAGED_OUTPUTPATH }}/*
    
    - name: Telegram notification
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: |
          编译时间：${{ env.DATE }}
          lede更新信息：${{ env.useVersionInfo }}
          ${{ env.PRODUCT_NAME }}打包完成
